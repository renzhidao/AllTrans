name: Build AllTrans (AGP 8.x)

# 每次 push 都触发；如只想监听 main 分支，改成:
# on:
#   push:
#     branches: [main]
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1) 拉代码
      - name: Checkout
        uses: actions/checkout@v4

      # 2) 配置 JDK 17（AGP 8.x 推荐）
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      # 3) 写 local.properties，指向 Runner 自带 SDK
      - name: Generate local.properties
        run: echo "sdk.dir=$ANDROID_SDK_ROOT" > local.properties
        env:
          ANDROID_SDK_ROOT: /usr/local/lib/android/sdk

      # ---- 如需正式签名，在此解码 keystore 并写入 gradle.properties ----
      # （可先注释掉，等需要时再打开）
      # - name: Decode keystore & gradle.properties
      #   if: ${{ secrets.KEYSTORE_B64 != '' }}
      #   env:
      #     KEYSTORE_B64: ${{ secrets.KEYSTORE_B64 }}
      #     KEY_ALIAS:     ${{ secrets.KEY_ALIAS }}
      #     KEY_STORE_PWD: ${{ secrets.KEY_STORE_PWD }}
      #     KEY_PWD:       ${{ secrets.KEY_PWD }}
      #   run: |
      #     echo "$KEYSTORE_B64" | base64 -d > keystore.jks
      #     cat >> gradle.properties <<EOF
      #     RELEASE_STORE_FILE=keystore.jks
      #     RELEASE_STORE_PASSWORD=$KEY_STORE_PWD
      #     RELEASE_KEY_ALIAS=$KEY_ALIAS
      #     RELEASE_KEY_PASSWORD=$KEY_PWD
      #     EOF
      # ------------------------------------------------------------------

      # 4) 构建 Release APK（app + module）
      - name: Build APKs
        run: ./gradlew :app:assembleRelease :module:assembleRelease --no-daemon --stacktrace

      # 5) 上传产物
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: APK
          path: |
            app/build/outputs/apk/release/*.apk
            module/build/outputs/apk/release/*.apk