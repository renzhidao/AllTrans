name: Build Release APK

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Comprehensive XML Fix
      run: |
        #!/bin/bash
        set -e
        
        echo "=== 全面修复所有XML文件 ==="
        
        # 函数：安全地添加内容到文件
        safe_append() {
            local file="$1"
            local content="$2"
            local search="$3"
            
            if [ -f "$file" ] && ! grep -Fq "$search" "$file"; then
                echo "$content" >> "$file"
                echo "已修复: $file"
            fi
        }
        
        # 函数：完全重写文件
        rewrite_file() {
            local file="$1"
            local content="$2"
            
            echo "$content" > "$file"
            echo "已重写: $file"
        }
        
        # 1. 修复 apps_list.xml
        safe_append "app/src/main/res/layout/apps_list.xml" "</LinearLayout>" "</LinearLayout>"
        
        # 2. 修复 strings.xml
        safe_append "app/src/main/res/values/strings.xml" "</resources>" "</resources>"
        
        # 3. 重写 keys.xml
        rewrite_file "app/src/main/res/values/keys.xml" '<?xml version="1.0" encoding="utf-8"?>
<resources>
</resources>'
        
        # 4. 确保drawable目录存在并修复图标文件
        mkdir -p app/src/main/res/drawable-anydpi-v4
        rewrite_file "app/src/main/res/drawable-anydpi-v4/ic_list_icon_placeholder.xml" '<?xml version="1.0" encoding="utf-8"?>
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24"
    android:viewportHeight="24"
    android:tint="?attr/colorOnSurface">
    <path
        android:fillColor="@android:color/white"
        android:pathData="M12,2C6.48,2 2,6.48 2,12s4.48,10 10,10 10,-4.48 10,-10S17.52,2 12,2zM13,17h-2v-6h2v6zM13,9h-2L11,7h2v2z"/>
</vector>'
        
        # 5. 批量检查并修复所有layout文件
        find app/src/main/res/layout -name "*.xml" -type f | while read -r file; do
            if [ -f "$file" ]; then
                # 获取第一个非注释、非XML声明的标签
                first_tag=$(grep -v "^<?xml\|^<!--" "$file" | grep -m1 "^<[^/]" | sed 's/<KATEX_INLINE_OPEN[^ >]*KATEX_INLINE_CLOSE.*/\1/' | head -1)
                if [ ! -z "$first_tag" ] && [ "$first_tag" != "xml" ]; then
                    end_tag="</$first_tag>"
                    if ! grep -Fq "$end_tag" "$file"; then
                        echo "$end_tag" >> "$file"
                        echo "已为 $file 添加结束标签: $end_tag"
                    fi
                fi
            fi
        done
        
        # 6. 批量检查并修复所有values文件
        find app/src/main/res/values -name "*.xml" -type f | while read -r file; do
            if [ -f "$file" ]; then
                safe_append "$file" "</resources>" "</resources>"
            fi
        done
        
        # 7. 清理任何可能存在的备份文件
        find app/src/main/res -name "*.bak" -delete 2>/dev/null || true
        find app/src/main/res -name "*.tmp" -delete 2>/dev/null || true
        
        echo "=== XML修复完成，验证文件 ==="
        
        # 验证关键文件
        key_files=(
            "app/src/main/res/layout/apps_list.xml"
            "app/src/main/res/values/strings.xml"
            "app/src/main/res/values/keys.xml"
            "app/src/main/res/drawable-anydpi-v4/ic_list_icon_placeholder.xml"
        )
        
        for file in "${key_files[@]}"; do
            if [ -f "$file" ]; then
                echo "✓ $file 存在"
                tail -2 "$file" | head -1
            else
                echo "✗ $file 不存在"
            fi
        done
    
    - uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Setup build environment
      run: |
        keytool -genkey -v -keystore release.keystore -alias key -keyalg RSA -keysize 2048 -validity 10000 -storepass android -keypass android -dname "CN=Android,O=Android,C=US"
        
        echo "RELEASE_STORE_FILE=../release.keystore" >> gradle.properties
        echo "RELEASE_STORE_PASSWORD=android" >> gradle.properties
        echo "RELEASE_KEY_ALIAS=key" >> gradle.properties
        echo "RELEASE_KEY_PASSWORD=android" >> gradle.properties
        echo "android.useAndroidX=true" >> gradle.properties
        echo "android.enableJetifier=true" >> gradle.properties
        
        echo '{"project_info":{"project_number":"1","project_id":"d"},"client":[{"client_info":{"mobilesdk_app_id":"1:1:android:1","android_client_info":{"package_name":"akhil.alltrans"}},"api_key":[{"current_key":"x"}]}]}' > app/google-services.json
        
        chmod +x gradlew
    
    - name: Clean and Build
      run: |
        ./gradlew clean
        ./gradlew assembleRelease
    
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: alltrans-release
        path: app/build/outputs/apk/release/app-release.apk
